name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  frontend:
    name: Frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      working-directory: ./frontend
      run: npm install

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  backend:
    name: Backend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11

    - name: Install dependencies
      working-directory: ./backend
      run: pip install -r requirements.txt
      
    - name: Make directory for artifact
      working-directory: ./backend
      run: mkdir -p test-results

    - name: Run tests
      env:
        DB: ${{ secrets.DB }}
        KEY: ${{ secrets.KEY }}
        PASSWORD: ${{ secrets.PASSWORD }}
        PORT: ${{ secrets.PORT }}
        SERVER: ${{ secrets.SERVER }}
        USER: ${{ secrets.USER }}
        APIKEY: ${{ secrets.APIKEY }}
        AUTHDOMAIN: ${{ secrets.AUTHDOMAIN }}
        PROJECTID: ${{ secrets.PROJECTID }}
        STORAGEBUCKET: ${{ secrets.STORAGEBUCKET }}
        MESSAGINGSENDERID: ${{ secrets.MESSAGINGSENDERID }}
        APPID: ${{ secrets.APPID }}
        MEASUREMENTID: ${{ secrets.MEASUREMENTID }}
        SERVICEACCOUNT: ${{ secrets.SERVICEACCOUNT }}
        DATABASEURL: ${{ secrets.DATABASEURL }}
      working-directory: ./backend
      run: pytest --html=test-results/results.html
      continue-on-error: true
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: backend/test-results/