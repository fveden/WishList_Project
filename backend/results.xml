<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="12" time="3.312" timestamp="2023-10-20T19:20:28.339301" hostname="freak"><testcase classname="tests.test_main" name="test_testpost" time="0.304" /><testcase classname="tests.test_main" name="test_register_empty_email" time="0.219" /><testcase classname="tests.test_main" name="test_register_empty_pass" time="0.217"><failure message="assert 400 &lt;= 200&#10; +  where 200 = &lt;Response [200 OK]&gt;.status_code">client = &lt;httpx.AsyncClient object at 0x0000017E5D1FB4D0&gt;

    @pytest.mark.anyio
    async def test_register_empty_pass(client: AsyncClient):
        """
            user registration test
        """
        await User.all().delete()
        username, email, password = ["mihaTest", "mihaTest@mail.ru", ""]
        assert await User.filter(username=username).count() == 0
    
        data = {"username": username, "email": email, "password": password}
        response = await client.post("/register", json=data)
    
&gt;       assert 400 &lt;= response.status_code &lt; 500
E       assert 400 &lt;= 200
E        +  where 200 = &lt;Response [200 OK]&gt;.status_code

tests\test_main.py:57: AssertionError</failure></testcase><testcase classname="tests.test_main" name="test_register_empty_username" time="0.217"><failure message="assert 400 &lt;= 200&#10; +  where 200 = &lt;Response [200 OK]&gt;.status_code">client = &lt;httpx.AsyncClient object at 0x0000017E5D1FB4D0&gt;

    @pytest.mark.anyio
    async def test_register_empty_username(client: AsyncClient):
        """
            user registration test
        """
        await User.all().delete()
        username, email, password = ["", "mihaTest@mail.ru", "bibis"]
        assert await User.filter(username=username).count() == 0
    
        data = {"username": username, "email": email, "password": password}
        response = await client.post("/register", json=data)
    
&gt;       assert 400 &lt;= response.status_code &lt; 500
E       assert 400 &lt;= 200
E        +  where 200 = &lt;Response [200 OK]&gt;.status_code

tests\test_main.py:73: AssertionError</failure></testcase><testcase classname="tests.test_main" name="test_register_existing_user" time="0.218" /><testcase classname="tests.test_main" name="test_register_existing_user_with_diff_pass" time="0.217" /><testcase classname="tests.test_main" name="test_register_existing_user_with_diff_email" time="0.217" /><testcase classname="tests.test_main" name="test_register_same_email" time="0.218" /><testcase classname="tests.test_main" name="test_get_token_for_existing_user" time="0.436" /><testcase classname="tests.test_main" name="test_get_token_for_non_existing_user" time="0.002" /><testcase classname="tests.test_main" name="test_get_token_for_wrong_password" time="0.442" /><testcase classname="tests.test_main" name="test_get_me" time="0.436" /></testsuite></testsuites>